--liquibase formatted sql
--preconditions onFail:HALT onError:HALT

--changeset FIVETRAN_CONNECTOR_TYPE:1 runOnChange:true stripComments:true
--labels: "FIVETRAN_CONNECTOR_TYPE or GENERIC"

use role sysadmin;
ALTER TABLE FIVETRAN_TERRAFORM_LAB_DB.FIVETRAN_LOG.CONNECTOR_TYPE set CHANGE_TRACKING=TRUE;

use role cdops_admin;
CREATE STREAM IF NOT EXISTS CDOPS_STATESTORE.REPORTING.FIVETRAN_CONNECTOR_TYPE_STREAM
ON TABLE FIVETRAN_TERRAFORM_LAB_DB.FIVETRAN_LOG.CONNECTOR_TYPE;

CREATE OR REPLACE VIEW CDOPS_STATESTORE.REPORTING_EXT.VW_FIVETRAN_CONNECTOR_TYPE AS
	SELECT
	  	ID										,
	   	OFFICIAL_CONNECTOR_NAME					,
	   	TYPE									,
	   	AVAILABILITY							,
	   	CREATED_AT								,
	   	PUBLIC_BETA_AT							,
	   	RELEASE_AT								,
	   	DELETED									,
	   	BROKEN									,
	   	_FIVETRAN_SYNCED
	FROM FIVETRAN_TERRAFORM_LAB_DB.FIVETRAN_LOG.CONNECTOR_TYPE;

DROP TABLE IF EXISTS CDOPS_STATESTORE.REPORTING.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE;

CREATE TRANSIENT TABLE IF NOT EXISTS CDOPS_STATESTORE.REPORTING.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE (
	ID							VARCHAR(256),
	OFFICIAL_CONNECTOR_NAME		VARCHAR(256),
	TYPE						VARCHAR(256),
	AVAILABILITY			VARCHAR(256),
	CREATED_AT		TIMESTAMP_TZ(9),
	PUBLIC_BETA_AT	TIMESTAMP_TZ(9),
	RELEASE_AT		TIMESTAMP_TZ(9),
	DELETED	BOOLEAN,
	BROKEN	BOOLEAN,
	_FIVETRAN_SYNCED	TIMESTAMP_TZ(9)
);


--Override CDOPS Variables
--UPDATE CDOPS_STATESTORE.REPORTING.CDOPS_VARIABLES SET VAR_VALUE='USING CRON 0 */3 * * * UTC'
--WHERE
--ACCOUNT_LOCATOR=CURRENT_ACCOUNT() AND
--REGION_NAME=CURRENT_REGION() AND
--VAR_USAGE='TASK_VW_FIVETRAN_CONNECTOR_TYPE',
--VAR_NAME='TASK_SCHEDULE';

ALTER TASK IF EXISTS CDOPS_STATESTORE.REPORTING.TASK_VW_FIVETRAN_CONNECTOR_TYPE SUSPEND;

CREATE OR REPLACE PROCEDURE CDOPS_STATESTORE.REPORTING.SP_VW_FIVETRAN_CONNECTOR_TYPE()
  returns VARIANT
  language javascript
  as
  '
    const sql_begin_trans = snowflake.createStatement({ sqlText:`BEGIN TRANSACTION;`});
    const sql_commit_trans = snowflake.createStatement({ sqlText:`COMMIT;`});
    try{
      sql_begin_trans.execute();
      var stream_check = "select SYSTEM$STREAM_HAS_DATA(\'cdops_statestore.reporting.fivetran_connector_type_stream\');"

      var statement_1 = snowflake.createStatement( {sqlText: stream_check} );
      var result_set_1 = statement_1.execute();
      result_set_1.next();
      var RS = result_set_1.getColumnValue(1);
      if (RS==true) {
          var my_sql_command_2 = "INSERT INTO CDOPS_STATESTORE.REPORTING.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE " +
                                 " SELECT ID, OFFICIAL_CONNECTOR_NAME,TYPE, AVAILABILITY,  CREATED_AT,  PUBLIC_BETA_AT,  " +
                                 " RELEASE_AT, DELETED,  BROKEN,  _FIVETRAN_SYNCED	 FROM  " +
                                 " CDOPS_STATESTORE.REPORTING.FIVETRAN_CONNECTOR_TYPE_STREAM;"
          var statement_2 = snowflake.createStatement( {sqlText: my_sql_command_2} );
          var result_set_2 = statement_2.execute();
                           }
    var my_sql_command_3 = "DELETE FROM CDOPS_STATESTORE.REPORTING.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE " +
                     "WHERE _FIVETRAN_SYNCED <= (select dateadd(day,-var_value,current_date) from table(get_var(\'DAYS_TO_RETAIN\',\'VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE\',CURRENT_ACCOUNT(),CURRENT_REGION()))) ; "

      var statement_3 = snowflake.createStatement( {sqlText: my_sql_command_3} );
      var result_set_3 = statement_3.execute();
    }
    catch(err){
   const error = `Failed: Code: ${err.code}\\n  State: ${err.state}\\n  Message: ${err.message}\\n Stack Trace:\\n   ${err.stackTraceTxt}`;
   throw error;
               }
    finally{
        sql_commit_trans.execute();
    }
    return "success";
  ';


SET TASK_SCHEDULE = (SELECT VAR_VALUE FROM table(get_var('TASK_SCHEDULE','TASK_VW_FIVETRAN_CONNECTOR_TYPE',CURRENT_ACCOUNT(),CURRENT_REGION())));

CREATE OR REPLACE task CDOPS_STATESTORE.REPORTING.TASK_VW_FIVETRAN_CONNECTOR_TYPE
    WAREHOUSE = ${TASK_WAREHOUSE}
    SCHEDULE = $TASK_SCHEDULE
AS
    CALL CDOPS_STATESTORE.REPORTING.SP_VW_FIVETRAN_CONNECTOR_TYPE();

ALTER TASK IF EXISTS CDOPS_STATESTORE.REPORTING.TASK_VW_FIVETRAN_CONNECTOR_TYPE RESUME;


CALL CDOPS_STATESTORE.REPORTING.SP_VW_FIVETRAN_CONNECTOR_TYPE();

	CREATE OR REPLACE VIEW CDOPS_STATESTORE.REPORTING_EXT.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY AS
	  SELECT DISTINCT
		CCD.ID						,
		CCD.OFFICIAL_CONNECTOR_NAME	,
		CCD.TYPE					,
		CCD.AVAILABILITY			,
		CCD.CREATED_AT				,
		CCD.PUBLIC_BETA_AT			,
		CCD.RELEASE_AT				,
		CCD.DELETED					,
		CCD.BROKEN					,
		CCD._FIVETRAN_SYNCED
			FROM TABLE(CDOPS_STATESTORE.REPORTING.RESOLVE_MEMBER_RESOURCE_MAPPING_UDF()) AS C, CDOPS_STATESTORE.REPORTING.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE CCD
	  WHERE
		  C.DATABASE_PATTERN IS NOT NULL ;

-- rollback DROP TABLE IF EXISTS "CDOPS_STATESTORE"."REPORTING"."VW_FIVETRAN_CONNECTOR_TYPE_HISTORY_TABLE";
-- rollback DROP TASK IF EXISTS  CDOPS_STATESTORE.REPORTING.TASK_VW_FIVETRAN_CONNECTOR_TYPE;
-- rollback DROP PROCEDURE IF EXISTS  CDOPS_STATESTORE.REPORTING.SP_VW_FIVETRAN_CONNECTOR_TYPE();
-- rollback DROP VIEW IF EXISTS  CDOPS_STATESTORE.REPORTING_EXT.VW_FIVETRAN_CONNECTOR_TYPE;
-- rollback DROP VIEW IF EXISTS  CDOPS_STATESTORE.REPORTING_EXT.VW_FIVETRAN_CONNECTOR_TYPE_HISTORY;
-- rollback DROP STREAM IF EXISTS  CDOPS_STATESTORE.REPORTING.FIVETRAN_CONNECTOR_TYPE_STREAM;